import turtle
import colorsys  # –¥–ª—è HSV ‚Üí RGB

#–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
step_count = 0
total_steps = 1

#–ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É ‚Äî —Ä–∞–¥—É–∂–Ω—ã–π (—á–µ—Ä–µ–∑ HSV)
def get_rainbow_color(step_index, total_steps):
    hue = step_index / total_steps  # –æ—Ç 0.0 –¥–æ 1.0
    r, g, b = colorsys.hsv_to_rgb(hue, 1, 1)  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å –∏ —è—Ä–∫–æ—Å—Ç—å
    return (r, g, b)

#–†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –∫—Ä–∏–≤–∞—è –ì–∏–ª—å–±–µ—Ä—Ç–∞
def hilbert(t, level, angle, step, max_level):
    global step_count, total_steps

    if level == 0:
        return

    t.right(angle)
    hilbert(t, level - 1, -angle, step, max_level)

    t.pencolor(get_rainbow_color(step_count, total_steps))
    t.forward(step)
    step_count += 1
    turtle.update()  # –æ–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –≤—Ä—É—á–Ω—É—é (–∞–Ω–∏–º–∞—Ü–∏—è)

    t.left(angle)
    hilbert(t, level - 1, angle, step, max_level)

    t.pencolor(get_rainbow_color(step_count, total_steps))
    t.forward(step)
    step_count += 1
    turtle.update()

    hilbert(t, level - 1, angle, step, max_level)

    t.left(angle)
    t.pencolor(get_rainbow_color(step_count, total_steps))
    t.forward(step)
    step_count += 1
    turtle.update()

    hilbert(t, level - 1, -angle, step, max_level)
    t.right(angle)

#–†–∏—Å–æ–≤–∞–Ω–∏–µ –≤—Å–µ–π –∫—Ä–∏–≤–æ–π
def draw_hilbert_curve(order, step=10):
    global step_count, total_steps

    step_count = 0
    total_steps = (2 ** order) ** 2 - 1  # –ø—É—Ç—å

    screen = turtle.Screen()
    screen.title(f"üåà –ö—Ä–∏–≤–∞—è –ì–∏–ª—å–±–µ—Ä—Ç–∞ ‚Äî –≥–ª—É–±–∏–Ω–∞ {order}")
    screen.bgcolor("white")
    turtle.colormode(1.0)

    t = turtle.Turtle()
    t.speed(0)
    t.pensize(2)

    # –£—Å–∫–æ—Ä—è–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É
    turtle.tracer(0, 0)  # –æ—Ç–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
    size = step * (2 ** order - 1)
    t.penup()
    t.goto(-size // 2, size // 2)
    t.pendown()

    hilbert(t, order, 90, step, order)

    t.hideturtle()
    turtle.update()  # –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
    screen.mainloop()

#–ó–∞–ø—É—Å–∫
depth = int(input("–í–≤–µ–¥–∏—Ç–µ –≥–ª—É–±–∏–Ω—É (1‚Äì7): "))
draw_hilbert_curve(depth)